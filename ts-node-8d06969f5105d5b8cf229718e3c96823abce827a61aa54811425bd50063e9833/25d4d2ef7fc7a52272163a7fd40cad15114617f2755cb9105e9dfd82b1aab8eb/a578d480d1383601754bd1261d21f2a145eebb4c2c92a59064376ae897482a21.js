"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var fs = require("fs");
var https = require("https");
var read_all_lessons_route_1 = require("./read-all-lessons.route");
var create_user_route_1 = require("./create-user.route");
var bodyParser = require('body-parser');
var app = express();
app.use(bodyParser.json());
var commandLineArgs = require('command-line-args');
var optionDefinitions = [
    { name: 'secure', type: Boolean, defaultOption: true },
];
var options = commandLineArgs(optionDefinitions);
// REST API
app.route('/api/lessons')
    .get(read_all_lessons_route_1.readAllLessons);
app.route('/api/signup')
    .post(create_user_route_1.createUser);
if (options.secure) {
    var httpsServer_1 = https.createServer({
        key: fs.readFileSync('key.pem'),
        cert: fs.readFileSync('cert.pem')
    }, app);
    // launch an HTTPS Server. Note: this does NOT mean that the application is secure
    httpsServer_1.listen(9000, function () { return console.log("HTTPS Secure Server running at https://localhost:" + httpsServer_1.address().port); });
}
else {
    // launch an HTTP Server
    var httpServer_1 = app.listen(9000, function () {
        console.log("HTTP Server running at https://localhost:" + httpServer_1.address().port);
    });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUveW92Y2hlbmtvL1Byb2plY3RzL2FuZ3VsYXItc2VjdXJpdHktY291cnNlL3NlcnZlci9zZXJ2ZXIudHMiLCJzb3VyY2VzIjpbIi9ob21lL3lvdmNoZW5rby9Qcm9qZWN0cy9hbmd1bGFyLXNlY3VyaXR5LWNvdXJzZS9zZXJ2ZXIvc2VydmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsaUNBQW1DO0FBRW5DLHVCQUF5QjtBQUN6Qiw2QkFBK0I7QUFDL0IsbUVBQXdEO0FBQ3hELHlEQUErQztBQUMvQyxJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFFMUMsSUFBTSxHQUFHLEdBQWdCLE9BQU8sRUFBRSxDQUFDO0FBRW5DLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7QUFFM0IsSUFBTSxlQUFlLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFFckQsSUFBTSxpQkFBaUIsR0FBRztJQUN0QixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRyxhQUFhLEVBQUUsSUFBSSxFQUFFO0NBQzFELENBQUM7QUFFRixJQUFNLE9BQU8sR0FBRyxlQUFlLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUduRCxXQUFXO0FBQ1gsR0FBRyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUM7S0FDcEIsR0FBRyxDQUFDLHVDQUFjLENBQUMsQ0FBQztBQUV6QixHQUFHLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQztLQUNuQixJQUFJLENBQUMsOEJBQVUsQ0FBQyxDQUFDO0FBR3RCLElBQUksT0FBTyxDQUFDLE1BQU0sRUFBRTtJQUVoQixJQUFNLGFBQVcsR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDO1FBQ25DLEdBQUcsRUFBRSxFQUFFLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUMvQixJQUFJLEVBQUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUM7S0FDcEMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUVSLGtGQUFrRjtJQUNsRixhQUFXLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxjQUFNLE9BQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtREFBbUQsR0FBRyxhQUFXLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQTdGLENBQTZGLENBQUMsQ0FBQztDQUVqSTtLQUNJO0lBRUQsd0JBQXdCO0lBQ3hCLElBQU0sWUFBVSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO1FBQ2hDLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkNBQTJDLEdBQUcsWUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pGLENBQUMsQ0FBQyxDQUFDO0NBRU4iLCJzb3VyY2VzQ29udGVudCI6WyJcblxuaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7QXBwbGljYXRpb259IGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5pbXBvcnQgKiBhcyBodHRwcyBmcm9tICdodHRwcyc7XG5pbXBvcnQge3JlYWRBbGxMZXNzb25zfSBmcm9tIFwiLi9yZWFkLWFsbC1sZXNzb25zLnJvdXRlXCI7XG5pbXBvcnQge2NyZWF0ZVVzZXJ9IGZyb20gXCIuL2NyZWF0ZS11c2VyLnJvdXRlXCI7XG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcblxuY29uc3QgYXBwOiBBcHBsaWNhdGlvbiA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmNvbnN0IGNvbW1hbmRMaW5lQXJncyA9IHJlcXVpcmUoJ2NvbW1hbmQtbGluZS1hcmdzJyk7XG5cbmNvbnN0IG9wdGlvbkRlZmluaXRpb25zID0gW1xuICAgIHsgbmFtZTogJ3NlY3VyZScsIHR5cGU6IEJvb2xlYW4sICBkZWZhdWx0T3B0aW9uOiB0cnVlIH0sXG5dO1xuXG5jb25zdCBvcHRpb25zID0gY29tbWFuZExpbmVBcmdzKG9wdGlvbkRlZmluaXRpb25zKTtcblxuXG4vLyBSRVNUIEFQSVxuYXBwLnJvdXRlKCcvYXBpL2xlc3NvbnMnKVxuICAgIC5nZXQocmVhZEFsbExlc3NvbnMpO1xuXG5hcHAucm91dGUoJy9hcGkvc2lnbnVwJylcbiAgICAucG9zdChjcmVhdGVVc2VyKTtcblxuXG5pZiAob3B0aW9ucy5zZWN1cmUpIHtcblxuICAgIGNvbnN0IGh0dHBzU2VydmVyID0gaHR0cHMuY3JlYXRlU2VydmVyKHtcbiAgICAgICAga2V5OiBmcy5yZWFkRmlsZVN5bmMoJ2tleS5wZW0nKSxcbiAgICAgICAgY2VydDogZnMucmVhZEZpbGVTeW5jKCdjZXJ0LnBlbScpXG4gICAgfSwgYXBwKTtcblxuICAgIC8vIGxhdW5jaCBhbiBIVFRQUyBTZXJ2ZXIuIE5vdGU6IHRoaXMgZG9lcyBOT1QgbWVhbiB0aGF0IHRoZSBhcHBsaWNhdGlvbiBpcyBzZWN1cmVcbiAgICBodHRwc1NlcnZlci5saXN0ZW4oOTAwMCwgKCkgPT4gY29uc29sZS5sb2coXCJIVFRQUyBTZWN1cmUgU2VydmVyIHJ1bm5pbmcgYXQgaHR0cHM6Ly9sb2NhbGhvc3Q6XCIgKyBodHRwc1NlcnZlci5hZGRyZXNzKCkucG9ydCkpO1xuXG59XG5lbHNlIHtcblxuICAgIC8vIGxhdW5jaCBhbiBIVFRQIFNlcnZlclxuICAgIGNvbnN0IGh0dHBTZXJ2ZXIgPSBhcHAubGlzdGVuKDkwMDAsICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJIVFRQIFNlcnZlciBydW5uaW5nIGF0IGh0dHBzOi8vbG9jYWxob3N0OlwiICsgaHR0cFNlcnZlci5hZGRyZXNzKCkucG9ydCk7XG4gICAgfSk7XG5cbn1cblxuXG5cblxuXG5cblxuXG4iXX0=