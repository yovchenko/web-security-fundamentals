"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var fs = require("fs");
var https = require("https");
var read_all_lessons_route_1 = require("./read-all-lessons.route");
var create_user_route_1 = require("./create-user.route");
var bodyParser = require('body-parser');
var cookieParser = require('cookie-parser');
var app = express();
app.use(bodyParser.json());
app.use(cookieParser());
var commandLineArgs = require('command-line-args');
var optionDefinitions = [
    { name: 'secure', type: Boolean, defaultOption: true },
];
var options = commandLineArgs(optionDefinitions);
// REST API
app.route('/api/lessons')
    .get(read_all_lessons_route_1.readAllLessons);
app.route('/api/signup')
    .post(create_user_route_1.createUser);
if (options.secure) {
    var httpsServer_1 = https.createServer({
        key: fs.readFileSync('key.pem'),
        cert: fs.readFileSync('cert.pem')
    }, app);
    // launch an HTTPS Server. Note: this does NOT mean that the application is secure
    httpsServer_1.listen(9000, function () { return console.log("HTTPS Secure Server running at https://localhost:" + httpsServer_1.address().port); });
}
else {
    // launch an HTTP Server
    var httpServer_1 = app.listen(9000, function () {
        console.log("HTTP Server running at https://localhost:" + httpServer_1.address().port);
    });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUveW92Y2hlbmtvL1Byb2plY3RzL2FuZ3VsYXItc2VjdXJpdHktY291cnNlL3NlcnZlci9zZXJ2ZXIudHMiLCJzb3VyY2VzIjpbIi9ob21lL3lvdmNoZW5rby9Qcm9qZWN0cy9hbmd1bGFyLXNlY3VyaXR5LWNvdXJzZS9zZXJ2ZXIvc2VydmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsaUNBQW1DO0FBRW5DLHVCQUF5QjtBQUN6Qiw2QkFBK0I7QUFDL0IsbUVBQXdEO0FBQ3hELHlEQUErQztBQUMvQyxJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDMUMsSUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBRzlDLElBQU0sR0FBRyxHQUFnQixPQUFPLEVBQUUsQ0FBQztBQUVuQyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQzNCLEdBQUcsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztBQUV4QixJQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUVyRCxJQUFNLGlCQUFpQixHQUFHO0lBQ3RCLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFHLGFBQWEsRUFBRSxJQUFJLEVBQUU7Q0FDMUQsQ0FBQztBQUVGLElBQU0sT0FBTyxHQUFHLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBR25ELFdBQVc7QUFDWCxHQUFHLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQztLQUNwQixHQUFHLENBQUMsdUNBQWMsQ0FBQyxDQUFDO0FBRXpCLEdBQUcsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDO0tBQ25CLElBQUksQ0FBQyw4QkFBVSxDQUFDLENBQUM7QUFHdEIsSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO0lBRWhCLElBQU0sYUFBVyxHQUFHLEtBQUssQ0FBQyxZQUFZLENBQUM7UUFDbkMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQy9CLElBQUksRUFBRSxFQUFFLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQztLQUNwQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBRVIsa0ZBQWtGO0lBQ2xGLGFBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLGNBQU0sT0FBQSxPQUFPLENBQUMsR0FBRyxDQUFDLG1EQUFtRCxHQUFHLGFBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBN0YsQ0FBNkYsQ0FBQyxDQUFDO0NBRWpJO0tBQ0k7SUFFRCx3QkFBd0I7SUFDeEIsSUFBTSxZQUFVLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQ0FBMkMsR0FBRyxZQUFVLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekYsQ0FBQyxDQUFDLENBQUM7Q0FFTiIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtBcHBsaWNhdGlvbn0gZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcbmltcG9ydCAqIGFzIGh0dHBzIGZyb20gJ2h0dHBzJztcbmltcG9ydCB7cmVhZEFsbExlc3NvbnN9IGZyb20gXCIuL3JlYWQtYWxsLWxlc3NvbnMucm91dGVcIjtcbmltcG9ydCB7Y3JlYXRlVXNlcn0gZnJvbSBcIi4vY3JlYXRlLXVzZXIucm91dGVcIjtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3QgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xuXG5cbmNvbnN0IGFwcDogQXBwbGljYXRpb24gPSBleHByZXNzKCk7XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XG5cbmNvbnN0IGNvbW1hbmRMaW5lQXJncyA9IHJlcXVpcmUoJ2NvbW1hbmQtbGluZS1hcmdzJyk7XG5cbmNvbnN0IG9wdGlvbkRlZmluaXRpb25zID0gW1xuICAgIHsgbmFtZTogJ3NlY3VyZScsIHR5cGU6IEJvb2xlYW4sICBkZWZhdWx0T3B0aW9uOiB0cnVlIH0sXG5dO1xuXG5jb25zdCBvcHRpb25zID0gY29tbWFuZExpbmVBcmdzKG9wdGlvbkRlZmluaXRpb25zKTtcblxuXG4vLyBSRVNUIEFQSVxuYXBwLnJvdXRlKCcvYXBpL2xlc3NvbnMnKVxuICAgIC5nZXQocmVhZEFsbExlc3NvbnMpO1xuXG5hcHAucm91dGUoJy9hcGkvc2lnbnVwJylcbiAgICAucG9zdChjcmVhdGVVc2VyKTtcblxuXG5pZiAob3B0aW9ucy5zZWN1cmUpIHtcblxuICAgIGNvbnN0IGh0dHBzU2VydmVyID0gaHR0cHMuY3JlYXRlU2VydmVyKHtcbiAgICAgICAga2V5OiBmcy5yZWFkRmlsZVN5bmMoJ2tleS5wZW0nKSxcbiAgICAgICAgY2VydDogZnMucmVhZEZpbGVTeW5jKCdjZXJ0LnBlbScpXG4gICAgfSwgYXBwKTtcblxuICAgIC8vIGxhdW5jaCBhbiBIVFRQUyBTZXJ2ZXIuIE5vdGU6IHRoaXMgZG9lcyBOT1QgbWVhbiB0aGF0IHRoZSBhcHBsaWNhdGlvbiBpcyBzZWN1cmVcbiAgICBodHRwc1NlcnZlci5saXN0ZW4oOTAwMCwgKCkgPT4gY29uc29sZS5sb2coXCJIVFRQUyBTZWN1cmUgU2VydmVyIHJ1bm5pbmcgYXQgaHR0cHM6Ly9sb2NhbGhvc3Q6XCIgKyBodHRwc1NlcnZlci5hZGRyZXNzKCkucG9ydCkpO1xuXG59XG5lbHNlIHtcblxuICAgIC8vIGxhdW5jaCBhbiBIVFRQIFNlcnZlclxuICAgIGNvbnN0IGh0dHBTZXJ2ZXIgPSBhcHAubGlzdGVuKDkwMDAsICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJIVFRQIFNlcnZlciBydW5uaW5nIGF0IGh0dHBzOi8vbG9jYWxob3N0OlwiICsgaHR0cFNlcnZlci5hZGRyZXNzKCkucG9ydCk7XG4gICAgfSk7XG5cbn1cblxuXG5cblxuXG5cblxuXG4iXX0=